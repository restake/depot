name: "Build Binary"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Specify the version"
        required: true
        default: "v6.3.1"
      repository:
        description: "Specify the repository"
        required: true
        default: "composable-cosmos"
      organization:
        description: "Specify the organization"
        required: true
        default: "ComposableFi"
      protocol:
        description: "Specify the protocol"
        required: true
        default: "centauri"
      binaryname:
        description: "Specify the binary name"
        required: true
        default: "centaurid"
  pull_request:
    branches:
      - "master"

env:
  version: "${{ inputs.version || 'v6.3.1' }}"
  repository: "${{ inputs.repository || 'composable-cosmos' }}"
  organization: "${{ inputs.organization || 'ComposableFi' }}"
  protocol: "${{ inputs.protocol || 'centauri' }}"
  binaryname: "${{ inputs.protocol || 'centaurid' }}"

jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest-l"
    steps:
      - id: "setup-dependencies"
        name: "Install required system packages"
        run: |
          sudo add-apt-repository -y ppa:rmescandon/yq
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential curl git musl-dev jq yq

      - uses: actions/checkout@v2
      - id: "setup-builder"
        name: "Setup Builder"
        run: |
          chmod +x setup-builder.sh
          export BINARY_PROTOCOL="${{ env.protocol }}"
          sh setup-builder.sh

      - id: "clone-pipeline"
        name: "Clone pipeline"
        uses: "actions/checkout@v4"
        with:
          path: "pipeline"

      - id: "clone"
        name: "Clone Protocol source"
        uses: "actions/checkout@v4"
        with:
          repository: "${{ env.organization }}/${{ env.repository }}"
          fetch-tags: true
          path: "${{ env.protocol }}"
          ref: "refs/tags/${{ env.version }}"
          submodules: true

      - id: "apply-patches"
        name: "Apply patches"
        run: |
          set -euo pipefail
          shopt -s nullglob

          cd "${GITHUB_WORKSPACE}/centauri"
          git am --3way "${GITHUB_WORKSPACE}/pipeline/patches"/*.patch

      - name: "Run protocol-specific build script"
        run: |
          protocol_script="${{ env.protocol }}-build.sh"
          chmod +x ${{ env.protocol }}-build.sh
          if [ -f "$protocol_script" ]; then
            export BINARY_VERSION="${{ env.version }}"
            export BINARY_PROTOCOL="${{ env.protocol }}"
            bash "$protocol_script"
          else
            echo "Error: Invalid repository specified or missing build script '$protocol_script'"
            exit 1
          fi

      - name: List Repository Contents
        run: ls -R
  
      - id: "upload-artifact"
        name: "Save binary to workspace"
        uses: "actions/upload-artifact@v3"
        with:
          name: "${{ env.protocol }}-validator"
          path: "${{ env.protocol }}/bin/${{ env.binaryname }}"
          if-no-files-found: "error"
          retention-days: 1